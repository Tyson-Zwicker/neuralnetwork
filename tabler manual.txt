//TODO: Change the namning convetion to plurals.  Its wants array most of the time, not a single
//object..  (ie. objectsToHTML instead of objectToHTML.. because it show a _list_).

let tabler = new Tabler();

tabler.arrayToHTML (title, array, columns)
 
    This will show a 1 or 2 D array.
    "columns" is optional. If provided, and the array is one dimensional,
    it will print the array as a grid, with the specified number of columns.
    Ex.
        tabler.arrayToHTML ('test',[1,2,3,4],2);
    Result:
        12
        34

tabler.objectToHTML (title, objectList, columnames)
 
    This will show an array of objects by representing each object in 
    its own row, with the requested properties of said object being
    shown as the columns.

table.objectsToArrayWithHTML (
    'Test #6',
    test6data,
    ['field1', 'field2', 'field3'])
);

    If the object happend to have an array it, it will show the array properly.

table.complexObjectToHTML (title, objectList, propertyNames, subObjectProperties)

    If the property is primite, its shows it,
    If its an array, it shows the first dimesion's values.
    IF its an object (sub-object) it looks into the "subObjectProperty" 
        parameter, which is MAP.  Key if the sub-object property you
        want to be shown and the value is whatever is.  TODO: Its NOT RECURSIVE YET
        but its going to be soon.

    